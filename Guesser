#include <stdio.h>
#include <cs50.h>
#include <stdlib.h>
#include <math.h>


int main(void) {
    
    int key = get_int("KEY: ");
    int steps = 0;
    bool found = false;
    
    // Make Sure Number is Positive
    if (key >= 0 )
    {
        int j = 1;
        while (true)
        {
            // increment j until 2^j is larger than the key
            if (pow(2, j) > key)
            {
                break;
            } else j++;
        }
        
        // setup the array with values matching their indexes
        int upperBound = ( (int)pow(2, j) );
        int KeyArray[upperBound];
        for (int i = 0; i<upperBound; i++)
        {
            KeyArray[i] = i;
        }

        int floatingUpperBound = upperBound;
        int floatingLowerBound = 0;
        while (!found)
        {
            // determine if the value is on above or below half of the array
            if (key > ( (floatingUpperBound/2) + (floatingLowerBound/2) ))
            {
                floatingLowerBound = (floatingUpperBound/2) + (floatingLowerBound/2);
                steps++;
            }
            else if (key < ( (floatingUpperBound/2) + (floatingLowerBound/2) ))
            {
                floatingUpperBound = (floatingUpperBound/2) + (floatingLowerBound/2);
                steps++;
            }
            else
            { // number is directly in the middle of the array
                steps++;
                found = true;
            }
        }

        printf("Steps: %i\n", steps);
    }
    else
    {
        printf("Error. Negative Value.\n");
    }
    
}
